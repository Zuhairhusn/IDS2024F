My format 

1 & 2.
ENIAC (Computer) - 1940s
FORTRAN - 1950s
Algol 58 - 1950s
Lisp - 1950s
Basic - 1960s
C - 1970s
sh (Shell scripting) - 1970s
C++ - 1980s
Fortran 90 - 1990s
Python - 1990s
Java - 1990s
C# - 2000s
JavaScript - 2000s

3.
Electronic Numerical Integrator and Computer

4. 
Integers can represent a variety of data types, including floating-point numbers, characters, and other symbols using binary representation, which is the simplest and most reliable method for digital computation.

5.
Registers

6. 
Hard Disk Drive (HDD)

7.
Bit

8. 
Assembly language

8. 
Yes, it needs to be assembled into machine code.

9.
FORTRAN

9. 
7 decades (developed in the 1950s)

10. 
Assembly language

10. 
Third-generation programming languages

11. 
C: 1970s
C++: 1980s
MATLAB/Python: 1980s/1990s

12. 
B

13. 
C

14. 
MATLAB: Fortran
Python: ABC

15. 
Registers

16.
Bit

17. 
Approximately 100 times faster

18. 
Approximately 100 times faster

19. 
Approximately 1000 times faster

20. 
Transistors act as switches to control electrical signals and as amplifiers for data transmission.

21. 
Adding more transistors increases heat production and power consumption, which limits speed improvements due to thermal constraints and power inefficiencies.

22. 
Fetch
Decode
Execute

23. 
Yes, because memory access and I/O operations can become bottlenecks, limiting overall performance despite high CPU cycle rates.

24.
Memory access, because data transfer speeds between RAM and the CPU are slower than the CPU's processing speed, creating a delay in data availability.

25. 
Dennard Scaling: Predicts that as transistors get smaller, power density stays constant, allowing for faster performance without increased power consumption.
MOSFET Scaling: Focuses on the size reduction of MOS transistors while maintaining efficiency and performance.
Moore’s Law: States that the number of transistors on a chip doubles approximately every two years, leading to exponential growth in computing power.

26. 
Pounds of rice: 2080 grains / 7000 grains per pound ≈ 0.297 pounds

27. 
Grains in the last (64th) square: 
18 grains
Total grains for all squares: 
19 grains
Pounds of rice: 
15 pounds
Years to produce: 
1315 years

28.
Conditional branching (if statements)
Ability to maintain state (variable storage)
Ability to iterate (loops or recursion)

29. Extra Credit
Exponential behavior shows rapid growth (e.g., doubling) in logarithmic space, while power-law behavior shows linear growth on a log-log plot, indicating different scaling properties and long-tail distributions.
